title: Lee Se Geon
logo: null
author: themefisher
description: this is meta description
email: dltprjs1@naver.com
phone: 010 - 7724 - 7848
address: 서울특별시 금천구 벚꽃로 14길 5
copyright: Copyright &copy; 2020 Designed by [Themefisher](https://themefisher.com) & Developed by [Getjekyllthemes](https://getjekyllthemes.com)
menu:
- name: About
  link: /about
- name: skills
  link: /blog
- name: Portfolio
  link: /portfolio
- name: Contact
  link: /contact
google-analytics: null
hero:
  hero-title: 책임감을 가지고<br> 충실히 임하는 <br> 개발자 이세건입니다.
social:
- icon: ti-facebook
  link: '#'
- icon: ti-instagram
  link: https://www.instagram.com/?next=%2F
- icon: ti-github
  link: https://github.com/dltprjs1
blurb: 어려운 난관에 맞닥뜨려도 해결할 때까지 놓지 않는 개발자 이세건입니다. <br> 끊임없이 노력하는 개발자가 되겠습니다.<br> 어느 곳에 가더라도 함께하는 개발자가 되겠습니다.
blurb-btn-link: /about
blurb-btn-name: know more
work-process:
- title: (주)넷틴스
  icon: assets/images/experience/icon-2.png
  content: 소프트웨어 유지보수 및 개발, 웹 개발 및 유지보수 <br> 2023.03 - 2024.03
- title: (주)경남지오영
  icon: assets/images/experience/icon-1.png
  content: 자재관리 <br> 2021.05 - 2022.06
- title: (주)NEK
  icon: assets/images/experience/icon-3.png
  content: 생산 기계 설비 수리 금형 교환 <br> 2017.12 - 2019.12
Language-process:
- title: Java
  icon: assets/images/skills/java.png
- title: Python
  icon: assets/images/skills/python.png
- title: delphi
  icon: assets/images/skills/delphi.png
FrontEnd-process:
- title: HTML5
  icon: assets/images/skills/html5.png
- title: CSS
  icon: assets/images/skills/css.png
- title: JavaScript(Jquery)
  icon: assets/images/skills/js.png
- title: BootStrap
  icon: assets/images/skills/bootstrap.png
BackEnd-process:
- title: Spring
  icon: assets/images/skills/spring.png
- title: Spring FrameWork
  icon: assets/images/skills/spring.png
- title: MyBatis
  icon: assets/images/skills/mybatis.png
- title: SQL/PL
  icon: assets/images/skills/sql.png
DataBase-process:
- title: Oracle
  icon: assets/images/skills/oracle.png
- title: MSSQL
  icon: assets/images/skills/mssql.png
- title: MYSQL
  icon: assets/images/skills/mysql.png
Tool-process:
- title: Eclipse
  icon: assets/images/skills/eclipse.png
- title: STS(Spring-Tool-Suite)
  icon: assets/images/skills/spring.png
- title: Visual Studio Code
  icon: assets/images/skills/vscode.png
- title: IntelliJ
  icon: assets/images/skills/intellij.png
- title: GitHub
  icon: assets/images/skills/github.png
- title: Docker  
  icon: assets/images/skills/docker.png
blog-btn-link: /blog
skills-title: Skills
skills:
- name: FrontEnd
  color: '#9473e6'
  value: 50%
- name: BackEnd
  color: '#bdecf6'
  value: 80%
- name: DataBase(DB)
  color: '#ffffa6'
  value: 60%
experience-title: Experience
experience:
- name: Junior UX Designer
  icon: icon-1.png
  date: Jan 2007 - Feb 2009
  organization: WEBEX
- name: UX & UI Designer
  icon: icon-2.png
  date: Mar 2009 - Aug 2014
  organization: AUGMEDIX
- name: Senior UI Designer
  icon: icon-3.png
  date: Sep 2014 - Present
  organization: THEMEFISHER
education-title: Education
education:
- name: KH정보교육원
  date: 2021.7 - 2022.12
  organization: (스마트웹&콘텐츠개발)스마트웹&콘텐츠 웹애플리케이션 개발자 양성과정
- name: 경남도립 남해대학교
  date: 2012.3 - 2014.6
  organization: 메카트로닉스과
- name: 칠원고등학교
  date: 2009.3 - 2012.2
  organization: 이과계열

portfolio-home-items:
- image: assets/images/portfolio/Zabbix_monitoring_Main.png
  url: '/zabbixmonitoring'
  contents: <h4 class="fw-bold ui-serif">자빅스 모니터링 모듈</h4> 2024.05.01 ~ 2024.06.07 <br> 1인 개발 <br> Linux, Shell Script, PostgreSQL, Monitoring

- image: assets/images/portfolio/AutoTrading_Web.png
  url: '/autotradingweb'
  contents: <h4 class="fw-bold ui-serif">데이터 실시간 시각화 웹 페이지</h4> 2024.03.01 ~ 2024.03.11 <br> 1인 개발 <br> Java, Docker, Springboot, Socket, 실시간
   
- image: assets/images/portfolio/Docker_AutoServer.png
  url: '/autotradingserver'
  contents: <h4 class="fw-bold ui-serif">자동 선물 데이터 처리 서버</h4> 2024.01.27 ~ 2024.02.15 <br> 1인 개발 <br> Java, Docker, Server, Linux, mybatis, Socket

- image: assets/images/portfolio/AutoTrading_Server.png
  url: '/autotradingprogram'
  contents: <h4 class="fw-bold ui-serif">자동 선물 프로그램</h4> 2024.01.02 ~ 2024.01.26 <br> 1인 개발 <br> Python, Selenium, Socket, 자동화  
 
- image: assets/images/portfolio/portfolio_Main.png
  url: '/portfol'
  contents: <h4 class="fw-bold ui-serif">포트폴리오</h4> 2023.02.15 ~ <br> 1인 개발 <br>html, 자기소개서, 포트폴리오
  
- image: assets/images/portfolio/SangGYM_Main.png
  url: '/SangGym'
  contents: <h4 class="fw-bold ui-serif">헬스장 홈페이지</h4> 2023.02 ~ 2023.02 <br> 1인 개발 <br> bootstrap, Frontend
  
- image: assets/images/portfolio/FinalProject_Main.png
  url: '/cowork'
  contents: <h4 class="fw-bold ui-serif">cowork 그룹웨어</h4> 2022.12 ~ 2022.12 <br> 5인 개발 <br> maven, mybatis, Backend 
  
- image: assets/images/portfolio/SemiProject_Main.png
  url: '/challengers'
  contents: <h4 class="fw-bold ui-serif">챌린저스 웹 어플리케이션</h4> 2022.10 ~ 2022.10 <br> 5인 개발 <br> 관리자 페이지, Backend

portfolio-label:
- title: JAVA
  type: JAVA
- title: PYTHON
  type: PYTHON

portfolio-items:
- image: assets/images/portfolio/Zabbix_monitoring_Main.png
  url: '/zabbixmonitoring'
  contents: <h4 class="fw-bold ui-serif">자빅스 모니터링 모듈</h4> 2024.05.01 ~ 2024.06.07 <br> 1인 개발 <br> Linux, Shell Script, PostgreSQL, Monitoring
  -type: JAVA

- image: assets/images/portfolio/AutoTrading_Web.png
  url: '/autotradingweb'
  contents: <h4 class="fw-bold ui-serif">데이터 실시간 시각화 웹 페이지</h4> 2024.03.01 ~ 2024.03.11 <br> 1인 개발  <br> Java, Docker, Server, Linux, mybatis, Socket
  portfolio-type:
  - type: JAVA
 
- image: assets/images/portfolio/Docker_AutoServer.png
  url: '/autotradingserver'
  contents: <h4 class="fw-bold ui-serif">자동 선물 데이터 처리 서버</h4> 2024.01.27 ~ 2024.02.15 <br> 1인 개발 <br> Java, Docker, Server, Linux, mybatis, Socket
  portfolio-type:
  - type: JAVA
 
- image: assets/images/portfolio/AutoTrading_Server.png
  url: '/autotradingprogram'
  contents: <h4 class="fw-bold ui-serif">자동 선물 프로그램</h4> 2024.01.02 ~ 2024.01.26 <br> 1인 개발 <br> Python, Selenium, Socket, 자동화
  portfolio-type:
  - type: Python

- image: assets/images/portfolio/portfolio_Main.png
  url: '/portfol'
  contents: <h4 class="fw-bold ui-serif">포트폴리오</h4> 2023.02.15 ~ <br> 1인 개발 <br>html, 자기소개서, 포트폴리오
  portfolio-type:
  - type: JAVA

- image: assets/images/portfolio/SangGYM_Main.png
  url: '/SangGym'
  contents: <h4 class="fw-bold ui-serif">헬스장 홈페이지</h4> 2023.02 ~ 2023.02 <br> 1인 개발 <br> bootstrap, Frontend
  portfolio-type:
  - type: JAVA
  
- image: assets/images/portfolio/FinalProject_Main.png
  url: '/cowork'
  contents: <h4 class="fw-bold ui-serif">cowork 그룹웨어</h4> 2022.12 ~ 2022.12 <br> 5인 개발 <br> maven, mybatis, Backend
  portfolio-type:
  - type: JAVA
  
- image: assets/images/portfolio/SemiProject_Main.png
  url: '/challengers'
  contents: <h4 class="fw-bold ui-serif">챌린저스 웹 어플리케이션</h4> 2022.10 ~ 2022.10 <br> 5인 개발 <br> 관리자 페이지, Backend
  portfolio-type:
  - type: JAVA

testimonial-items:
- image: assets/images/portfolio/challengers/관리자메인.png
  content: <h4>5인 팀 프로젝트</h4><br> 제가 맡은 기능은 관리자 페이지입니다. <br> 관리자 메인페이지에는 총 6개의 카테고리로 나뉘어져 있습니다. 상단에는 include를 통해 관리자 모든 페이지에 위와 같이 로고 , 관리자 홈 , 회원 신고 관리 , 카테고리 관리 , 자주하는 질문 관리 , 1:1문의 관리로 이동이 가능하고 메인에는 총 6개로 상단의 페이지를 포함하여 챌린지 관리 , 관리자 권한 챌린지 만들기 페이지로 나뉩니다.
  
- image: assets/images/portfolio/challengers/회원신고관리.png
  content: 회원 신고 관리 페이지 입니다. <br> 메인에는 테이블 형식으로 회원 신고 목록을 볼 수 있으며 상단에는 검색 하단에는 페이징 처리가 되어있습니다. ajax를 활용하여 피신고자 , 신고자 , 제목을 통해 검색 할 수 있으며 페이징 처리 또한 ajax를 활용하였습니다. 목록을 클릭하여 회원을 삭제 또는 회원 정지 기능이 있습니다.  

- image: assets/images/portfolio/challengers/카테고리관리.png
  content: 카테고리 관리 페이지 입니다. <br> 메인 카테고리 총 9개로 이루어져 있고, 클릭하여 상세 페이지로 이동하면 카테고리 수정 , 삭제 기능이 있고 서브 카테고리 추가 , 수정 , 삭제 기능이 있습니다.

- image: assets/images/portfolio/challengers/자주하는질문관리.png
  content: 해당 페이지는 자주하는 질문 관리 페이지입니다. <br> 회원 신고 관리 페이지와 마찬가지로 상단에는 검색과 네 개의 카테고리가 있고 하단에는 페이징 처리가 되어있으며 중단에는 자주하는 질문 목록들이 나열되어있습니다. 검색과 페이징은 ajax를 통해 기능하며 목록을 클릭하여 상세보기 페이지로 이동하게 되면 추가 , 수정 , 삭제 기능이 있습니다.

- image: assets/images/portfolio/challengers/일대일문의관리.png
  content: 1:1문의 관리 페이지입니다. <br> 프로젝트 당시 관리자 페이지는 디자인 보다는 UI/UX의 편리성과 친절성이 중요하다고 생각하여 전체적으로 일관성이 있게 디자인 하였습니다. 질문 목록을 클릭하여 상세보기 페이지로 이동하게 되면 회원에게 답변을 하고 회원은 메인 include에 메일 이모티콘과 답변의 갯수가 생성됩니다.   

- image: assets/images/portfolio/challengers/챌린지관리.png
  content: 챌린지 관리 페이지입니다. <br> 회원 페이지에서 챌린지를 생성하거나 관리자 권한으로 챌린지를 생성한 모든 챌린지를 9개의 카테고리로 나타냅니다. 다른 기능들과 마찬가지로 상단에는 검색과 카테고리 목록 하단에는 페이징 처리가 되어있으며 한 페이지에 12개의 챌린지로 나뉘어 있습니다. 해당 챌린지를 클릭하여 상세보기 페이지로 이동하게 되면, 챌린지의 모든 설정들을 변경할 수 있습니다.
  
- image: assets/images/portfolio/challengers/챌린지개설.png
  content: 관리자 챌린지 개설 페이지입니다. <br> 챌린지 개설은 총 5단계로 이루어져 있습니다. <br> 1.세 개의 채크박스를 클릭하여 다음 단계로 넘어 갈 수 있습니다. <br> 2.다른 회원들에게 챌린지의 공개 유무를 결정합니다. <br> 3.챌린지의 제목 , 인증 방법 , 인증 빈도 , 기간을 정하고 예시 사진을 확인 후 다음 페이지로 넘어 갈 수 있습니다. <br> 4.인증가능 시간과 챌린지 소개 , 소개 사진을 작성 후 마지막 단계로 이동합니다. <br>5.예치금과 비공개 참여 코드 , 최대인원 설정후 챌린지를 개설할 수 있습니다.  
 
challnegers-process:
- icon: assets/images/skills/java.png
- icon: assets/images/skills/html5.png
- icon: assets/images/skills/css.png
- icon: assets/images/skills/js.png
- icon: assets/images/skills/bootstrap.png
- icon: assets/images/skills/jsp.png
- icon: assets/images/skills/oracle.png
- icon: assets/images/skills/eclipse.png
- icon: assets/images/skills/github.png 



testimonial2-items:
- image: assets/images/portfolio/cowork/프로젝트관리.png
  content: <h4>5인 팀 프로젝트</h4><br> 제가 맡은 기능은 프로젝트 페이지 입니다. <br> 프로젝트 메인 페이지는 상단에 include를 이용하여 캘린더 , 프로젝트 , 메모 , 주소록 , 메일 , 채팅창으로 이동이 가능하고 좌측에는 table형식 보기 버튼과 Status와 Member 필터링 기능이 있습니다.
  
- image: assets/images/portfolio/cowork/프로젝트Drag.png
  content: 프로젝트 페이지 기능 입니다. <br> Jquery에서 제공하는 sortable 함수와 option으로는 handle , connectwith , start , update , receive를 이용하여 하나의 프로젝트를 이동할 경우 ajax를 이용하여 status의 프로젝트가 업데이트 되도록 하였습니다. 가장 우측으로는 status 추가 기능이 있고 , status 아래 부분에는 프로젝트 추가기능이 있습니다.   

- image: assets/images/portfolio/cowork/프로젝트Modal.png
  content: 프로젝트를 클릭하였을때 생성되는 상세보기 모달 페이지입니다. <br> 모든 기능은 ajax를 활용하였고 최상단에 프로젝트 , 상단에 Member 구성이 있습니다 member는 popover를 이용하여 해당 멤버의 정보를 보거나 프로젝트로부터 제외시킬 수 있고 '+'버튼을 클릭하여 멤버를 추가할 수 있습니다. member구성 아래에 프로젝트의 상세내용을 추가 하거나 수정할 수 있고 댓글을 달거나 수정 삭제할 수 있습니다. 우측에는 프로젝트 시작일과 마감일을 date picker API를 활용하여 추가 수정이 가능하고 모달창에서 Status 변경이 가능합니다.

- image: assets/images/portfolio/cowork/프로젝트테이블.png
  content: 프로젝트를 Table 형식으로 나타내는 페이지입니다. 상단에는 프로젝트와 멤버를 검색할 수 있고 좌측에는 Status별로 프로젝트 목록을 확인 할 수 있습니다. 하단에는 페이징과 프로젝트 추가하기 기능이있습니다. 해당 프로젝트를 클릭할 경우 Modal창을 띄울 수 있습니다.  
 
cowork-process:
- icon: assets/images/skills/java.png
- icon: assets/images/skills/html5.png
- icon: assets/images/skills/css.png
- icon: assets/images/skills/js.png
- icon: assets/images/skills/bootstrap.png
- icon: assets/images/skills/spring.png
- icon: assets/images/skills/oracle.png
- icon: assets/images/skills/mybatis.png
- icon: assets/images/skills/spring.png
- icon: assets/images/skills/github.png 


testimonial3-items:
- image: assets/images/portfolio/AutoTrading/Server.png
  content: <h4>개별 프로젝트</h4><br> 자동 선물 프로그램은 파이썬을 사용하여 개발되었으며, 총 23일의 개발 기간이 소요되었습니다. <br>  이 프로그램은 사용자가 설정한 주문 조건에 따라 자동으로 주문을 처리합니다. <br> 프로그램은 소켓 클라이언트를 통해 서버에 주문 정보 및 관련 데이터를 안전하게 전송하며,<br> 이를 통해 사용자는 번거로운 주문 과정을 자동화하여 주문 시간을 절약할 수 있으며, 설정한 조건에 맞추어 자동으로 주문이 처리되기 때문에 사용자의 편의성을 높일 수 있습니다.<br> 자동 선물 프로그램은 소켓 통신을 통해 서버와의 데이터 교환을 실시간으로 처리하여, 효율적이고 안정적인 주문 처리를 보장합니다. 또한 사용자의 민감한 정보를 안전하게 전송하고 처리함으로써 보안에도 신경을 쓰고 있습니다.  

autotradingprogram-process:
- icon: assets/images/skills/python.png
- icon: assets/images/skills/vscode.png
- icon: assets/images/skills/mssql.png
- icon: assets/images/skills/github.png


testimonial4-items:
- image: assets/video/sanggym.mp4
  content: <h4>개별 프로젝트</h4><br> 취미로 웨이트트레이닝을 하고 있습니다. 제가 다니는 헬스장의 홈페이지가 궁금해서 찾아보았는데 <br> 홈페이지가 존재하지 않다는 것에 아이디어를 얻어 홈페이지를 제작해 보았습니다. home, 센터소개, 프로그램 페이지로 크게 이루어져있고 navermap API와 카카오톡 채널을 개설하여 kakakoAPI를 통해 문의를 하도록 개발 하였습니다. 프로그램 페이지는 PT, 헬스, GX 페이지로 ajax를 통해 실현하였습니다.  
  
- image: assets/video/sang_kakao.mp4
  content: 컴퓨터로 녹화할 경우 전화통화 및 카카오톡 페이지가 송출 되지 않아 휴대폰으로 촬영한 점 양해 부탑드립니다. 우선 contact를 클릭하거나 터치 할 경우 전화연결이 되고 카테고리 창에서 톡상담을 클릭할 경우 SangGYM 채널을 통해 개별적으로 사용자와의 소통이 가능하도록 하였습니다. MVC패턴을 사용하여 헬스장 관리자 페이지를 기획중에 있습니다. 시청해 주셔서 감사합니다!!!

sanggym-process:
- icon: assets/images/skills/java.png
- icon: assets/images/skills/html5.png
- icon: assets/images/skills/css.png
- icon: assets/images/skills/js.png
- icon: assets/images/skills/bootstrap.png
- icon: assets/images/skills/spring.png
- icon: assets/images/skills/intellij.png
- icon: assets/images/skills/github.png


testimonial5-items:
- image: assets/images/portfolio/Docker_AutoServer.png
  content: <h4>개별 프로젝트</h4><br>자동선물 프로그램 데이터 처리 서버는 자바로 개발되었으며, 총 10일의 개발 기간이 소요되었습니다.<br> 이 서버는 MyBatis 사용하여 데이터베이스와의 상호작용을 관리 <br> 소켓 클라이언트인 자동선물 프로그램에서 수신한 데이터를 가공하여 데이터베이스에 저장 <br> 웹 프로젝트에 실시간으로 자동선물 프로그램의 데이터를 전송합니다.<br> 데이터베이스에 저장하기 전에 데이터베이스 저장 프로시저에서 수신 받은 데이터를 가공하여 5개의 데이터 테이블에 알맞게 저장 또는 업데이트되도록 구성하였습니다.
  
autotradingserver-process:
- icon: assets/images/skills/java.png
- icon: assets/images/skills/spring.png
- icon: assets/images/skills/mybatis.png
- icon: assets/images/skills/eclipse.png
- icon: assets/images/skills/docker.png
- icon: assets/images/skills/github.png


testimonial6-items:
- image: assets/images/portfolio/AutoTrading/AutoTrading_Main.png
  content: <h4>개별 프로젝트</h4><br>소켓 클라이언트로 데이터를 실시간으로 수집하는 웹 프로젝트를 개발하였으며 총 7일의 개발 기간이 소요되었습니다.<br>이 프로젝트의 핵심 기능은 소켓과 웹 소켓을 통해 데이터를 실시간으로 처리하는 것이었습니다. <br>서버와 클라이언트 간의 소켓연동 그리고 Bo와 Fo간의 웹 소켓 연동을 설정하여 데이터의 실시간 전송을 구현하였습니다. <br> 이를 통해 사용자는 실시간으로 데이터를 받아 볼 수 있고, 데이터 처리 및 시각화가 가능했습니다. <br> 또한 프로젝트에서는 데이터의 실시간 집계 기능을 구현하였습니다. <br>서버에서 송신되는 데이터를 클라이언트에서 받아 집계하고, 사용자에게 실시간으로 결과를 제공했습니다. <br>이를 통해 사용자는 데이터의 변화를 실시간으로 모니터링할 수 있었습니다.<br> 자동 선물 프로그램에서 발생할 수 있는 오류를 탐지하기 위해 실시간 에러 탐지 기능을 구현했습니다. 에러를 실시간으로 감지하여 사용자에게 알림을 제공하고, 문제가 해결될 때까지 모니터링할 수 있었습니다.<br> 그리고, 자동선물 프로그램에 대한 주문 조건 설정 기능 또한 추가하였습니다.
- image: assets/images/portfolio/AutoTrading/AutoTrading_Charts.png
  content: 차트 페이지 입니다. <br> 1. 30분마다 초기화 및 업데이트 진행 되는 차트 <br> 2. 거래에 따른 보유금액 변동 <br> 3. 금일 에러 분류에 따른 차트로 구성되어 있습니다. 
- image: assets/images/portfolio/AutoTrading/AutoTrading_Table.png
  content: 테이블 페이지 입니다. <br> 1. 거래 이력 상세 확인 <br> 2. 주문 조건 상세 확인 <br> 3. 에러 상세 내역으로 구성 되어 있습니다.   
- image: assets/images/portfolio/Docker_AutoWeb.png
  content: 자동 선물 데이터 처리 서버와 마찬가지로 Docker로 배포하였으며 휴대폰으로도 접속 가능하도록 포트포워딩을 통해 외부에서도 접근 가능하도록 설정 하였습니다.<br> (SK 공유기는 DDNS 서비스가 없어 도메인은 IP:Port로 접근 가능 합니다..)<br> (IPTIME 공유기로 변경 예정)  
  
autotradingweb-process:
- icon: assets/images/skills/html5.png
- icon: assets/images/skills/css.png
- icon: assets/images/skills/js.png
- icon: assets/images/skills/bootstrap.png
- icon: assets/images/skills/java.png
- icon: assets/images/skills/spring.png
- icon: assets/images/skills/mybatis.png
- icon: assets/images/skills/eclipse.png
- icon: assets/images/skills/docker.png
- icon: assets/images/skills/github.png


testimonial7-items:
- image: assets/images/ReadMe/Portfolio_Main.png
  content: <h4>개별 프로젝트</h4><br>포트폴리오 Main 페이지입니다. <br>메인화면에는 간단한 자기소개 및 스킬에 대한 능숙도를 %로 나눠놓은 상자가 있으며 간단한 포트폴리오 목록들이 나열되어있습니다.
- image: assets/images/ReadMe/Portfolio_AboutMe.png
  content: 포트폴리오 About 페이지 입니다. <br>자기소개 및 경력, 학력을 보여드리고 있습니다.
- image: assets/images/ReadMe/Portfolio_Skills.png
  content: 포트폴리오 Skills 페이지 입니다. <br>기술 스택이 나열되어 있습니다.
- image: assets/images/ReadMe/Portfolio_Portfolio.png
  content: 포트폴리오 portfolio 페이지 입니다. <br>개인 또는 팀별 개발에 대한 목록들이 나열되어 있습니다. 
  
portfol-process:
- icon: assets/images/skills/html5.png
- icon: assets/images/skills/css.png
- icon: assets/images/skills/js.png
- icon: assets/images/skills/bootstrap.png
- icon: assets/images/skills/eclipse.png
- icon: assets/images/skills/github.png

testimonial8-items:
- image: assets/images/portfolio/Zabbix/zabbix_login.png
  content: 자빅스 모니터링 웹서비스 로그인 화면 입니다. <br> URL = <a href="http://39.115.190.122/zabbix">http://39.115.190.122/zabbix</a> <br> ID = Guest <br> PassWords = test7777 입니다.
- image: assets/images/portfolio/Zabbix/Zabbix_monitoring.png
  content: <h4>개별 프로젝트</h4><br>Zabbix 모니터링 Main 페이지입니다. <br>자빅스 모듈의 웹서비스 메인화면 입니다. <br> OS는 Rocky9 Linux, DB는 PostgreSQL을 사용하였습니다. <br> 자빅스의 구성은 서버, 프록시 서버, 에이전트로 구성되어 있습니다. 
- image: assets/images/portfolio/Zabbix/Zabbix_Host.png
  content: 호스트 정보 시각화 페이지 입니다. <br>호스트에 대한 정보를 권한에 따라 수정 또는 확인 할 수 있으며, 해당 호스트는 자빅스 에이전트 소프트웨어를 통해 등록이 가능합니다.<br>자빅스 에이전트는 네트워크 장치나 서버와 같은 모니터링 대상에서 데이터를 수집하여 자빅스 서버로 전송하는 소프트웨어입니다. <br> 위 이미지에서의 호스트는 Windows,Docker,Zabbix Server이며, 모니터링 어플리케이션은 Zabbix Server, Windows ,Linux, MSSQL, Apache, Docker에서 여러 수백가지 아이템을 모니터링 하고 있습니다. <br> ※ Guest의 경우 하나의 호스트(Zabbix Server)만 확인이 가능합니다.
- image: assets/images/portfolio/Zabbix/Zabbix_Data.png
  content: 모니터링 아이템의 대표적인 데이터로 CPU 사용량을 그래프화 한 페이지입니다. <br> 그래프화 또는 테이블화 하여 수백가지의 아이템을 모니터링 할 수 있으며 <br> 해당 아이템이 어느 수준을 벗어날 경우 실행 되는 트리거 또한 커스텀이 가능합니다. <br 대표적인 트리거의 예시로는 SMS 또는 Telegram ChatBot이 있습니다.
  
zabbixmonitoring-process:
- icon: assets/images/skills/Linux.png
- icon: assets/images/skills/PostgreSQL.png
- icon: assets/images/skills/apache.png
- icon: assets/images/skills/php.png

contact-title: Contact Info
contact-email: dltprjs1@naver.com
